name: studio-nuxt-build
run-name: studio nuxt build

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: .

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Identify package manager
        id: pkgman
        run: |
          if [ -f "./pnpm-lock.yaml" ]; then
            echo "cache=pnpm" >> "$GITHUB_OUTPUT"
            echo "package_manager=pnpm" >> "$GITHUB_OUTPUT"
            echo "install_command=pnpm install" >> "$GITHUB_OUTPUT"
            echo "add_dev_command=pnpm add -D" >> "$GITHUB_OUTPUT"
            echo "build_command=pnpm run build" >> "$GITHUB_OUTPUT"  # Assuming a 'build' script exists
          elif [ -f "./yarn.lock" ]; then
            echo "cache=yarn" >> "$GITHUB_OUTPUT"
            echo "package_manager=yarn" >> "$GITHUB_OUTPUT"
            echo "install_command=yarn install" >> "$GITHUB_OUTPUT"
            echo "add_dev_command=yarn add -D" >> "$GITHUB_OUTPUT"
            echo "build_command=yarn run build" >> "$GITHUB_OUTPUT" # Assuming a 'build' script exists
          elif [ -f "./package-lock.json" ]; then
            echo "cache=npm" >> "$GITHUB_OUTPUT"
            echo "package_manager=npm" >> "$GITHUB_OUTPUT"
            echo "install_command=npm install" >> "$GITHUB_OUTPUT"
            echo "add_dev_command=npm install -D" >> "$GITHUB_OUTPUT"
            echo "build_command=npm run build" >> "$GITHUB_OUTPUT" # Assuming a 'build' script exists
          else
            echo "cache=pnpm" >> "$GITHUB_OUTPUT"
            echo "package_manager=pnpm" >> "$GITHUB_OUTPUT"
            echo "install_command=pnpm install" >> "$GITHUB_OUTPUT"
            echo "add_dev_command=pnpm add -D" >> "$GITHUB_OUTPUT"
            echo "build_command=pnpm run build" >> "$GITHUB_OUTPUT"  # Assuming a 'build' script exists
          fi

      - name: Install pnpm
        if: ${{ steps.pkgman.outputs.package_manager == 'pnpm' }}
        uses: pnpm/action-setup@v4
        with:
          version: 8 # Specify pnpm version here
        id: pnpm-install

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: ${{ steps.pkgman.outputs.cache }}

      - name: Install dependencies
        run: ${{ steps.pkgman.outputs.install_command }}

      - name: Install @nuxthq/studio
        run: ${{ steps.pkgman.outputs.add_dev_command }} @nuxthq/studio

      - name: Create .nuxtrc
        run: echo -e "\nautoImport=true\nmodules[]=@nuxthq/studio" >> .nuxtrc

      - name: Generate
        run: npx nuxi build --preset github_pages
        env:
          NUXT_PUBLIC_STUDIO_API_URL: https://api.nuxt.studio

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./.output/public
